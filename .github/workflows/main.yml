name: Build, push, and deploy

on: [push]

env:
  IMAGE1: ghcr.io/${{ github.repository }}/deploytest2app1:${{ github.sha }}
  IMAGE2: ghcr.io/${{ github.repository }}/deploytest2app2:${{ github.sha }}
  CI: true
  TZ: Europe/Oslo

jobs:
  buildapp1:
    name: Build App1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish App1 image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_REPOSITORY} --password-stdin
          docker build --tag ${IMAGE1} app1
          docker push ${IMAGE1}
  buildapp2:
    name: Build App2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Publish App2 image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_REPOSITORY} --password-stdin
          docker build --tag ${IMAGE2} app2
          docker push ${IMAGE2}
  deployapp1:
    runs-on: ubuntu-latest

    needs: buildapp1
    steps:
      - uses: actions/checkout@v2
      - name: Deploy App1 to Q1
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: nais.yaml
          VAR: image=${{env.IMAGE1}},appname=deploytest2app1,namespace=personoversikt
  deployapp2:
    runs-on: ubuntu-latest
    needs: buildapp2
    steps:
      - uses: actions/checkout@v2
      - name: Deploy App2 to Q1
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          PRINT_PAYLOAD: true
          CLUSTER: dev-fss
          RESOURCE: nais.yaml
          VAR: image=${{env.IMAGE2}},appname=deploytest2app2,namespace=default
